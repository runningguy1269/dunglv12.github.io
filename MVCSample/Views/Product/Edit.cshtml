@{
    Layout = null;
}
@model MVCSample.Business.Entities.Product

<link href="~/assets/global/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
<script src="~/assets/global/plugins/bootstrap/js/bootstrap.min.js"></script>
<script src="~/assets/global/plugins/owl-carousel/assets/js/jquery-1.9.1.min.js"></script>

<div class="container">
    <div class="row">
        <div class="col-md-8 col-md-offset-2">
            <div class="repository-app panel panel-default">
                <div class="panel-heading panel-head">
                    <div class="panel-body">

                        @*Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" })*@
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <h4 class="text-center text-uppercase">Products</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(x => x.product_id, new { @id = "cateId" })
                                @*<div class="form-group">

                    @Html.LabelFor(model => model.product_id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.product_id, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.product_id, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                                <div class="form-group">
                                    @Html.LabelFor(model => model.product_name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.product_name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.product_name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.supplier_id, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">

                                        <select type="text" class="form-control" name="supplier_id" required>
                                            @foreach (var c in @ViewBag.GetListSup)
                                            {
                                                @if (c.supplier_id == Model.supplier_id)
                                                {
                                                    <option value="@c.supplier_id" selected>@c.company_name</option>
                                                }
                                                else
                                                {
                                                    <option value="@c.supplier_id">@c.company_name</option>
                                                }

                                            }
                                        </select>

                                        @Html.ValidationMessageFor(model => model.supplier_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.category_id, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">

                                        @*<input type="text" name="category_id" class="form-control" required />*@
                                        <select type="text" class="form-control" name="category_id" required>
                                            @foreach (var p in @ViewBag.GetListCate)
                                            {
                                                @if (p.category_id == Model.category_id)
                                                {
                                                    <option value="@p.category_id" selected>@p.category_name</option>
                                                }
                                                else
                                                {
                                                    <option value="@p.category_id">@p.category_name</option>
                                                }


                                            }
                                        </select>

                                        @Html.ValidationMessageFor(model => model.category_id, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.quantity_per_unit, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.quantity_per_unit, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.quantity_per_unit, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.unit_price, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.unit_price, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.unit_price, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.units_in_stock, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.units_in_stock, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.units_in_stock, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.units_on_order, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.units_on_order, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.units_on_order, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.reorder_level, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.reorder_level, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.reorder_level, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.discontinued, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.discontinued, new { htmlAttributes = new { @class = "form-control" } })
                                        @*<input type="number" class="form-control" min="0" max="1" name="discontinued" />*@
                                        @Html.ValidationMessageFor(model => model.discontinued, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-success" />
                                        @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-warning" })
                                    </div>
                                </div>
                            </div>
                        }


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    //$(document).ready(function () {
    //    $("#btnSave").on('click', function () {
    //        var productID = $(this).attr("data-id");
    //        $.ajax({
    //            type: "POST",
    //            url: "/Product/Edit",
    //            data: { product_id: productID },
    //            contentType: "application/json;charset=utf-8",
    //            cache: false,
    //            dataType: "json",
    //            success: function (res) {
    //                if (res.success) {
    //                    alert(res.message);
    //                }
    //                else {
    //                    alert("Sửa thất bại !");
    //                }
    //            }
    //        });
    //    });
    //});
</script>

